package SalesrefundHotel;
import utility.Constant;
import java.io.IOException;
import java.sql.Driver;
import java.util.ArrayList;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Listeners;
import org.testng.annotations.Test;
import travlogix.Wrappermethods;
import atu.testng.reports.listeners.ATUReportsListener;
import atu.testng.reports.listeners.ConfigurationListener;
import atu.testng.reports.listeners.MethodListener;

@Listeners({ ATUReportsListener.class, ConfigurationListener.class, MethodListener.class })
public class Hotelnegative {

	static {

		// System.setProperty("atu.reporter.config",
		// "C:\\ATUReports\\atu.properties");
		System.setProperty("atu.reporter.config", utility.Constant.ATUREPORTS);

	}

	Wrappermethods wm;

	@BeforeTest
	public void instantiation() {
		wm = new Wrappermethods();

	}

	@BeforeMethod
	public void browesrnstatiation()

	{

		wm.launchbrowser("chrome", utility.Constant.TRAVELOGIXURL);

	}

	@Test(dataProvider = "dp")
	public void logincheckK(String Username, String Password, String Leftsidemenu, 
			String Commonindex) throws Exception

	{

		Thread.sleep(2000);

		// wm.sendtextbyid("", );
		wm.sendtextbyid("LoginCode", Username);
		Thread.sleep(50);
		wm.sendtextbyid("Password", Password);
		Thread.sleep(50);
		wm.clickbyxpath("//input[@value='Login']");
		Thread.sleep(900);

		// screnn===========================================================
		wm.sendtextbyid("input-items", Leftsidemenu);
		Thread.sleep(500);
		wm.clickbyid("modCAS001");
		Thread.sleep(500);
		wm.clickbyid("pgmSAL001");
		wm.sleep();

		wm.clickbyid("btnMainAdd");
		wm.sleep();
		
	//1	Hotel header	Hotel service Date validations

wm.Clearbyxpath("//input[@name='DktDate']");
Thread.sleep(300);
wm.clickbyid("btnMainSave");
wm.clickbyxpath("//input[@name='dktClientReference']");
Thread.sleep(300);
wm.Mousemoveover("//input[@name='DktDate']");
Thread.sleep(50);
wm.Listnegativescearios(utility.Constant.Travelogixuitooltipvalidation, Commonindex,
		"Pass : Docket Date validation is avilable ",
		"Fail :  Docket  Date validaiton is not avilable ");
Thread.sleep(200);
		
	
//Field validations


wm.Listandenter("//i[@class='fa fa-chevron-down']", "1");
Thread.sleep(200);
wm.Listandenter("//i[@class='fa fa-plus']", "1");
Thread.sleep(900);

//Field validations

//Docket type
wm.Mousemoveover("//input[@name='dktDocTypeCode_input']");
Thread.sleep(50);
wm.Listnegativescearios(utility.Constant.Travelogixuitooltipvalidation, Commonindex,
		"Pass : dktDocTypeCode_input Field  validation is avilable ",
		"Fail : dktDocTypeCode_input Field  validaiton is not avilable ");
Thread.sleep(200);

//sales branch
wm.Mousemoveover("//input[@name='DktBranchKey_input']");
Thread.sleep(50);
wm.Listnegativescearios(utility.Constant.Travelogixuitooltipvalidation, Commonindex,
		"Pass : DktBranchKey_input Field  validation is avilable ",
		"Fail : DktBranchKey_input Field  validaiton is not avilable ");
Thread.sleep(200);



//Customer 
wm.Mousemoveover("//input[@name='DktPartnername_input']");
Thread.sleep(50);
wm.Listnegativescearios(utility.Constant.Travelogixuitooltipvalidation, Commonindex,
		"Pass : DktPartnername_input Field  validation is avilable ",
		"Fail : DktPartnername_input Field  validaiton is not avilable ");
Thread.sleep(200);


//lead paxname
wm.Mousemoveover("//input[@name='dktLeadPaxName']");
Thread.sleep(50);
wm.Listnegativescearios(utility.Constant.Travelogixuitooltipvalidation, Commonindex,
		"Pass : dktLeadPaxName Field  validation is avilable ",
		"Fail : dktLeadPaxName Field  validaiton is not avilable ");
Thread.sleep(200);


		Thread.sleep(500);

	}

	@AfterMethod
	public void close()

	{
		wm.close();

	}

	@DataProvider(name = "dp")
	public Object[][] dp() throws IOException {

		return Wrappermethods.getSheet("Hotelnegative", "Hotelnegative");

	}
}